/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2022-11-24 07:14:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판 등록</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.js\"\r\n");
      out.write("	integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<form name=\"enrollform\" action=\"/board/enroll\" method=\"post\">\r\n");
      out.write("		<div class=\"board\">\r\n");
      out.write("			<h1>게시판 등록</h1>\r\n");
      out.write("			<table>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>제목</th>\r\n");
      out.write("						<td><input name=\"title\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>내용</th>\r\n");
      out.write("						<td><textarea rows=\"3\" name=\"content\" style=\"width: 950px;\"></textarea></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>작성자</th>\r\n");
      out.write("						<td><input name=\"writer\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"sub_btn_menu\">\r\n");
      out.write("				<a class=\"btn_line btn_gray\" onclick=\"check()\">등록\r\n");
      out.write("					</button> <a class=\"btn_line btn_gray\" href=\"/board/list\">취소</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function check() {\r\n");
      out.write("		if (document.enrollform.title.value == \"\") {\r\n");
      out.write("			alert(\"제목은 필수입니다.\");\r\n");
      out.write("			document.enrollform.title.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (document.enrollform.content.value == \"\") {\r\n");
      out.write("			alert(\"내용은 필수입니다.\");\r\n");
      out.write("			document.enrollform.content.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (document.enrollform.writer.value == \"\") {\r\n");
      out.write("			alert(\"작성자는 필수입니다.\");\r\n");
      out.write("			document.enrollform.writer.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		document.enrollform.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write(".sub_btn_menu .btn_line {\r\n");
      out.write("	display: block;\r\n");
      out.write("	float: left;\r\n");
      out.write("	margin: 0 3px 3px 0;\r\n");
      out.write("	padding: 0 20px;\r\n");
      out.write("	min-width: 66px;\r\n");
      out.write("	width: auto;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	line-height: 28px;\r\n");
      out.write("	font-size: 1.2em\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sub_btn_menu .btn_line {\r\n");
      out.write("	margin: 1.5px 3px 1.5px 0;\r\n");
      out.write("	padding: 0 17px;\r\n");
      out.write("	min-width: 50px;\r\n");
      out.write("	background: #fff\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_line {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 170px;\r\n");
      out.write("	height: 44px;\r\n");
      out.write("	line-height: 42px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 1.8em;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	font-weight: 300;\r\n");
      out.write("	border: 1px solid #fff;\r\n");
      out.write("	-webkit-box-sizing: border-box;\r\n");
      out.write("	-moz-box-sizing: border-box;\r\n");
      out.write("	box-sizing: border-box\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_line:hover {\r\n");
      out.write("	color: #666;\r\n");
      out.write("	background: #fff\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_line.btn_gray {\r\n");
      out.write("	color: #666;\r\n");
      out.write("	border-color: #999\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_line.btn_gray:hover {\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	background: #999\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board table tbody tr th {\r\n");
      out.write("	background-color: whitesmoke;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	font-family: '굴림';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board table {\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board table tbody tr td {\r\n");
      out.write("	border-bottom: 1px solid rgb(224, 224, 224);\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board table tbody tr th {\r\n");
      out.write("	border-bottom: 1px solid rgb(224, 224, 224);\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	width: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board {\r\n");
      out.write("	width: 1100px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-bottom: 300px;\r\n");
      out.write("	padding-top: 70px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board input {\r\n");
      out.write("	width: 950px;\r\n");
      out.write("}\r\n");
      out.write("</style>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
